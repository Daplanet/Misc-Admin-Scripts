#!/bin/bash

if [[ $UID != 0 ]]; then
    echo "You need to run this script as root."
    exit 1
fi

if [[ ! -e /etc/psa ]]; then
    echo "This server doesn't appear to have Plesk installed."
    exit 1
fi

if [[ ! -x /usr/bin/unzip ]]; then
    echo "Please install the unzip program."
    echo "Debian/Ubuntu: apt-get install unzip"
    echo "CentOS/RHEL: yum install unzip"
    exit 1
fi

echo
echo "THIS SCRIPT COMES WITH NO WARRANTY, EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK."
echo
echo "This script will find all 'km0ae9gr6m' compromised files under /var/www/vhosts"
echo "and clean them up. Backups of the affected scripts will be taken and stored in"
echo "/root/compfiles. It will also, optionally, change all Plesk passwords."
echo
echo "Press ENTER to start, CTRL+C to quit."
echo
read

echo "Firstly, all Plesk passwords, apart from database and email passwords, MUST be"
echo "changed. If you do not change the passwords, you will likely be compromised"
echo "again. New passwords will be echoed to the screen and saved in ./newpasswords.txt"
echo "Please note that while we don't change mailbox passwords directly, some may be"
echo "changed due to association with domain administrator accounts. Please check"
echo "the output carefully to ensure changed mailbox passwords are set correctly."
echo
echo -n "Would you like to change these passwords automatically now? [Y/n]: "
read -n1 pwchange

case $pwchange in
    [nN] )
        echo
        echo
        echo "Not changing passwords. You MUST do this yourself to prevent further compromises."
        echo
        sleep 4
        ;;
    [yY] )
        echo
        NEWADMINPW="$(openssl rand -base64 8 | tr -d '/')"
        # http://kb.parallels.com/en/113391
        /usr/bin/wget -q -O /tmp/ppc.zip "http://kb.parallels.com/Attachments/19094/Attachments/plesk_password_changer.zip"
        unzip -q -d /tmp /tmp/ppc.zip
        php -d open_basedir=  -d safe_mode=0 /tmp/plesk_password_changer.php "`cat /etc/psa/.psa.shadow`" ${NEWADMINPW} --admin --resellers --clients --domains --domainadmins --users --additionalftpaccounts --subdomains --webusers | tee newpasswords.txt
    
        echo "Done. Please save a copy of the passwords above or see"
        echo "newpasswords.txt in this directory."
        sleep 2
        echo
        echo "Press ENTER to start cleaning up compromised files."
        read
        ;;
    *)
        echo "Please answer Y or N. Exiting."
        exit 1
        ;;
esac

if [[ ! -d /root/compfiles ]]; then
    mkdir /root/compfiles 
fi

echo "Starting search for compromised files, please be patient."
echo

for file in $(find /var/www/vhosts -type f \( -iname "*.js" -o -iname "*.php" \) -exec egrep -sHl '(km0ae9gr6m|gootkit)' {} \;); do
    echo -n "Compromised file found: ${file} ... "
    /usr/bin/rsync -qaR $file /root/compfiles/
    shopt -s nocasematch
    if [[ $file == *.php ]]; then
        /usr/bin/perl -i -0777pe's|(.*)<script>/\*km0ae9gr6m\*/.*|$1\n|s' $file
        if [[ $? == 0 ]]; then echo "cleaned"; else echo "error"; fi;
    elif [[ $file == *.js ]]; then
        /usr/bin/perl -i -0777pe's|(.*)/\*km0ae9gr6m\*/.*|$1\n|s' $file
        if [[ $? == 0 ]]; then echo "cleaned"; else echo "error"; fi;
    else
        echo -e "\nSomething went wrong, got ${file} but this wasn't detected as .js or .php?\n"
    fi
    shopt -u nocasematch
done

echo
echo "All compromised files should now be clean."
echo "Bye."
echo
exit 0
